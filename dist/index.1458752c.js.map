{"mappings":"AAAAA,OAAOC,EAAID,OAAOE,OAAS,SAAUC,OAC7BC,EACmC,iBAA5BD,EAGHC,EAF+B,MAA/BD,EAAwB,GAWhC,SAAuBE,SACbC,EAAYC,SAASC,cAAc,mBACzCF,EAAUG,UAAYJ,EAAOK,OACtBJ,EAAUK,QAAQC,WAZVJ,CAAcL,GAGdI,SAASM,iBAAiBV,GAElCA,aAAmCW,QAC1CV,EAAWD,SASTY,EAAMC,OAAOC,OAAOf,OAAOgB,kBACjCF,OAAOG,OAAOJ,EAAAA,CACVX,SAAUA,EACVgB,OAAQjB,EAAwBiB,SAE7BL,GAGXb,OAAOgB,UAAAA,CACHG,QAAQ,EACRC,YAAapB,OACbqB,IAAAA,SAAIC,UACOC,KAAKrB,SAASoB,IAEzBE,SAAAA,SAASC,GACDA,aAAgBC,QAChBH,KAAKI,MAAKC,GAAMH,EAAKI,YAAYD,MACV,IAAhBH,EAAKN,SACZI,KAAKI,MAAKC,GAAMH,EAAKJ,IAAI,GAAGQ,YAAYD,KACxCE,QAAQC,IAAIN,EAAKJ,IAAI,MAG7BW,OAAAA,SAAOC,MACCA,aAAoBP,QACpBH,KAAKF,IAAI,GAAGQ,YAAYI,GACxBH,QAAQC,IAAI,aACLE,aAAoBC,uBAClBC,EAAI,EAAGA,EAAIF,EAASG,OAAQD,IACjCZ,KAAKF,IAAI,GAAGQ,YAAYI,EAASE,IACjCL,QAAQC,IAAI,UAEW,IAApBE,EAASd,SAChBc,EAASN,MAAKF,GAAQF,KAAKF,IAAI,GAAGQ,YAAYJ,KAC9CK,QAAQC,IAAI,OAGpBM,SAAAA,SAASC,WACIH,EAAI,EAAGA,EAAIZ,KAAKrB,SAASkC,OAAQD,IACtCZ,KAAKrB,SAASiC,GAAGI,UAAUC,IAAIF,UAE5Bf,MAEXkB,KAAAA,SAAKC,OACGC,EAAAA,WACKR,EAAI,EAAGA,EAAIZ,KAAKrB,SAASkC,OAAQD,IAAAA,KAClCS,EAAYhC,MAAMiC,KAAKtB,KAAKrB,SAASiC,GAAGxB,iBAAiB+B,IAC7DC,EAAQA,EAAMG,OAAOF,UAEzBD,EAAMzB,OAASK,KACRvB,OAAO2C,IAElBI,IAAAA,kBACWxB,KAAKL,QAEhBS,KAAAA,SAAKqB,WAEQb,EAAI,EAAGA,EAAIZ,KAAKrB,SAASkC,OAAQD,IACtCa,EAAGC,KAAK,KAAM1B,KAAKrB,SAASiC,GAAIA,UAE7BnC,OAJH2C,KAMRO,OAAAA,eACQP,EAAAA,UACJpB,KAAKI,MAAKF,KACkC,IAApCkB,EAAMQ,QAAQ1B,EAAK2B,aACnBT,EAAMU,KAAK5B,EAAK2B,eAGjBpD,OAAO2C,IAElBW,MAAAA,WACIxB,QAAQC,IAAIR,KAAKrB,WAErB+B,SAAAA,eACQU,EAAAA,UACJpB,KAAKI,MAAKF,IACNkB,EAAMU,QAAQ5B,EAAKQ,aAEhBjC,OAAO2C,IAElBY,GAAAA,SAAGC,EAAWd,EAAUM,UACpBzB,KAAKI,MAAKF,GAAQA,EAAKgC,iBAAiBD,GAAYE,IACtCA,EAAEC,OACNC,QAAQlB,IACVM,EAAGU,QAGJnC","sources":["./src/jquery.js"],"sourcesContent":["window.$ = window.jQuery = function (selectorOrArrayTemplate) {\r\n    let elements\r\n    if (typeof selectorOrArrayTemplate === 'string') {\r\n        if (selectorOrArrayTemplate[0] === '<') {\r\n            // 创建 div\r\n            elements = createElement(selectorOrArrayTemplate)\r\n        } else {\r\n            // 查找 div\r\n            elements = document.querySelectorAll(selectorOrArrayTemplate)\r\n        }\r\n    } else if (selectorOrArrayTemplate instanceof Array) {\r\n        elements = selectorOrArrayTemplate\r\n    }\r\n\r\n    function createElement(string) {\r\n        const container = document.createElement('template')\r\n        container.innerHTML = string.trim()\r\n        return container.content.firstChild\r\n    }\r\n    // api 可以操作elements\r\n    const api = Object.create(jQuery.prototype)\r\n    Object.assign(api, {\r\n        elements: elements,\r\n        oldApi: selectorOrArrayTemplate.oldApi,\r\n    })\r\n    return api\r\n}\r\n\r\njQuery.prototype = {\r\n    jquery: true,\r\n    constructor: jQuery,\r\n    get(index) {\r\n        return this.elements[index]\r\n    },\r\n    appendTo(node) {\r\n        if (node instanceof Element) {   //如果node是一个元素（标签）\r\n            this.each(el => node.appendChild(el)) // 遍历 elements，对每个 el 进行 node.appendChild 操作\r\n        } else if (node.jquery === true) {   //如果node是jQuery对象\r\n            this.each(el => node.get(0).appendChild(el))  // 遍历 elements，对每个 el 进行 node.get(0).appendChild(el))  操作\r\n            console.log(node.get(0))\r\n        }\r\n    },\r\n    append(children) {\r\n        if (children instanceof Element) {   //children是一个元素（标签）\r\n            this.get(0).appendChild(children)\r\n            console.log('1')\r\n        } else if (children instanceof HTMLCollection) {    //HTMLCollection 是 HTML 元素的集合\r\n            for (let i = 0; i < children.length; i++) {\r\n                this.get(0).appendChild(children[i])\r\n                console.log('2')\r\n            }\r\n        } else if (children.jquery === true) {     //如果children是jQuery对象\r\n            children.each(node => this.get(0).appendChild(node))\r\n            console.log('3')\r\n        }\r\n    },\r\n    addClass(className) {\r\n        for (let i = 0; i < this.elements.length; i++) {\r\n            this.elements[i].classList.add(className)\r\n        }\r\n        return this\r\n    },\r\n    find(selector) {\r\n        let array = []\r\n        for (let i = 0; i < this.elements.length; i++) {\r\n            let elements2 = Array.from(this.elements[i].querySelectorAll(selector))\r\n            array = array.concat(elements2)\r\n        }\r\n        array.oldApi = this\r\n        return jQuery(array)\r\n    },\r\n    end() {\r\n        return this.oldApi\r\n    },\r\n    each(fn) {\r\n        let array = []\r\n        for (let i = 0; i < this.elements.length; i++) {\r\n            fn.call(null, this.elements[i], i)\r\n        }\r\n        return jQuery(array)\r\n    },\r\n    parent() {\r\n        let array = []\r\n        this.each(node => {\r\n            if (array.indexOf(node.parentNode) === -1) {\r\n                array.push(node.parentNode)\r\n            }\r\n        })\r\n        return jQuery(array)\r\n    },\r\n    print() {\r\n        console.log(this.elements)\r\n    },\r\n    children() {\r\n        let array = []\r\n        this.each(node => {\r\n            array.push(...node.children)\r\n        })\r\n        return jQuery(array)\r\n    },\r\n    on(eventType, selector, fn) {\r\n        this.each(node => node.addEventListener(eventType, (e) => {\r\n            const t = e.target\r\n            if (t.matches(selector)) {\r\n                fn(e)\r\n            }\r\n        }))\r\n        return this\r\n    }\r\n}"],"names":["window","$","jQuery","selectorOrArrayTemplate","elements","string","container","document","createElement","innerHTML","trim","content","firstChild","querySelectorAll","Array","api","Object","create","prototype","assign","oldApi","jquery","constructor","get","index","this","appendTo","node","Element","each","el","appendChild","console","log","append","children","HTMLCollection","i","length","addClass","className","classList","add","find","selector","array","elements2","from","concat","end","fn","call","parent","indexOf","parentNode","push","print","on","eventType","addEventListener","e","target","matches"],"version":3,"file":"index.1458752c.js.map"}